{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/forms\";\nexport class HomeComponent {\n  constructor(http) {\n    this.http = http;\n  }\n  onSubmit() {\n    // Dikdörtgeni ve çizgileri çizen fonksiyonu çağır\n    this.drawRectangle(this.width, this.height, this.gap);\n    // Server'a gönderilecek verileri oluştur\n    let data = {\n      width: this.width,\n      height: this.height,\n      gap: this.gap\n    };\n    // Server'a göndermek için HTTP servisini kullan\n    this.http.post('server_url', data).subscribe(response => {\n      // Server'dan gelen yanıtı işle\n      console.log(response);\n    }, error => {\n      // Hata durumunda mesaj göster\n      console.error(error);\n    });\n  }\n  drawRectangle(width, height, gap) {\n    // Bir canvas elementi oluştur\n    let canvas = document.createElement('canvas');\n    canvas.width = width;\n    canvas.height = height;\n    // Canvas'ın context'ini al\n    let ctx = canvas.getContext('2d');\n    // Dikdörtgeni çiz\n    ctx?.strokeRect(0, 0, width, height);\n    // Yatay çizgileri çiz\n    for (let y = gap; y < height; y += gap) {\n      ctx?.moveTo(0, y);\n      ctx?.lineTo(width, y);\n      ctx?.stroke();\n    }\n    // Dikey çizgileri çiz\n    for (let x = gap; x < width; x += gap) {\n      ctx?.moveTo(x, 0);\n      ctx?.lineTo(x, height);\n      ctx?.stroke();\n    }\n    // Canvas'ı sayfaya ekle\n    document.body.appendChild(canvas);\n  }\n}\nHomeComponent.ɵfac = function HomeComponent_Factory(t) {\n  return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nHomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HomeComponent,\n  selectors: [[\"app-home\"]],\n  decls: 15,\n  vars: 3,\n  consts: [[1, \"form-inline\", \"float-right\", 3, \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"width\"], [\"type\", \"number\", \"id\", \"width\", \"name\", \"width\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"height\"], [\"type\", \"number\", \"id\", \"height\", \"name\", \"height\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"gap\"], [\"type\", \"number\", \"id\", \"gap\", \"name\", \"gap\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n  template: function HomeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function HomeComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"label\", 2);\n      i0.ɵɵtext(3, \"Dikd\\u00F6rtgenin geni\\u015Fli\\u011Fi:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function HomeComponent_Template_input_ngModelChange_4_listener($event) {\n        return ctx.width = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"div\", 1)(6, \"label\", 4);\n      i0.ɵɵtext(7, \"Dikd\\u00F6rtgenin y\\u00FCksekli\\u011Fi:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function HomeComponent_Template_input_ngModelChange_8_listener($event) {\n        return ctx.height = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"div\", 1)(10, \"label\", 6);\n      i0.ɵɵtext(11, \"\\u00C7izgilerin aral\\u0131\\u011F\\u0131:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function HomeComponent_Template_input_ngModelChange_12_listener($event) {\n        return ctx.gap = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"button\", 8);\n      i0.ɵɵtext(14, \"G\\u00F6nder\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.width);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.height);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.gap);\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.NgModel, i2.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;AAQA,OAAM,MAAOA,aAAa;EAMxBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAgB;EAExCC,QAAQ;IACN;IACA,IAAI,CAACC,aAAa,CAAC,IAAI,CAACC,KAAK,EAAE,IAAI,CAACC,MAAM,EAAE,IAAI,CAACC,GAAG,CAAC;IAErD;IACA,IAAIC,IAAI,GAAG;MACTH,KAAK,EAAE,IAAI,CAACA,KAAK;MACjBC,MAAM,EAAE,IAAI,CAACA,MAAM;MACnBC,GAAG,EAAE,IAAI,CAACA;KACX;IAED;IACA,IAAI,CAACL,IAAI,CAACO,IAAI,CAAC,YAAY,EAAED,IAAI,CAAC,CAACE,SAAS,CAC1CC,QAAQ,IAAG;MACT;MACAC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;IACvB,CAAC,EACDG,KAAK,IAAG;MACN;MACAF,OAAO,CAACE,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CACF;EACH;EAEAV,aAAa,CAACC,KAAa,EAAEC,MAAc,EAAEC,GAAW;IACtD;IACA,IAAIQ,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;IAC7CF,MAAM,CAACV,KAAK,GAAGA,KAAK;IACpBU,MAAM,CAACT,MAAM,GAAGA,MAAM;IAEtB;IACA,IAAIY,GAAG,GAAGH,MAAM,CAACI,UAAU,CAAC,IAAI,CAAC;IAEjC;IACAD,GAAG,EAAEE,UAAU,CAAC,CAAC,EAAE,CAAC,EAAEf,KAAK,EAAEC,MAAM,CAAC;IAEpC;IACA,KAAK,IAAIe,CAAC,GAAGd,GAAG,EAAEc,CAAC,GAAGf,MAAM,EAAEe,CAAC,IAAId,GAAG,EAAE;MACtCW,GAAG,EAAEI,MAAM,CAAC,CAAC,EAAED,CAAC,CAAC;MACjBH,GAAG,EAAEK,MAAM,CAAClB,KAAK,EAAEgB,CAAC,CAAC;MACrBH,GAAG,EAAEM,MAAM,EAAE;;IAGf;IACA,KAAK,IAAIC,CAAC,GAAGlB,GAAG,EAAEkB,CAAC,GAAGpB,KAAK,EAAEoB,CAAC,IAAIlB,GAAG,EAAE;MACrCW,GAAG,EAAEI,MAAM,CAACG,CAAC,EAAE,CAAC,CAAC;MACjBP,GAAG,EAAEK,MAAM,CAACE,CAAC,EAAEnB,MAAM,CAAC;MACtBY,GAAG,EAAEM,MAAM,EAAE;;IAGf;IACAR,QAAQ,CAACU,IAAI,CAACC,WAAW,CAACZ,MAAM,CAAC;EACnC;;AA5DWf,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAA4B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCR1BC,+BAA8D;MAAxDA;QAAA,OAAYf,cAAU;MAAA,EAAC;MAC3Be,8BAAwB;MACHA,sDAAuB;MAAAA,iBAAQ;MAClDA,gCAAsF;MAApBA;QAAA;MAAA,EAAmB;MAArFA,iBAAsF;MAExFA,8BAAwB;MACFA,uDAAwB;MAAAA,iBAAQ;MACpDA,gCAAyF;MAArBA;QAAA;MAAA,EAAoB;MAAxFA,iBAAyF;MAE3FA,8BAAwB;MACLA,wDAAmB;MAAAA,iBAAQ;MAC5CA,iCAAgF;MAAlBA;QAAA;MAAA,EAAiB;MAA/EA,iBAAgF;MAElFA,kCAA8C;MAAAA,4BAAM;MAAAA,iBAAS;;;MAVOA,eAAmB;MAAnBA,mCAAmB;MAIjBA,eAAoB;MAApBA,oCAAoB;MAI1BA,eAAiB;MAAjBA,iCAAiB","names":["HomeComponent","constructor","http","onSubmit","drawRectangle","width","height","gap","data","post","subscribe","response","console","log","error","canvas","document","createElement","ctx","getContext","strokeRect","y","moveTo","lineTo","stroke","x","body","appendChild","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Program Files (x86)\\Kodlar\\Furkan_ChProject\\ChProject_Client\\ChProject-Angular-RectangleDrawer\\src\\app\\home\\home.component.ts","C:\\Program Files (x86)\\Kodlar\\Furkan_ChProject\\ChProject_Client\\ChProject-Angular-RectangleDrawer\\src\\app\\home\\home.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent {\n\n  width!: number;\n  height!: number;\n  gap!: number;\n\n  constructor(private http: HttpClient) { }\n\n  onSubmit() {\n    // Dikdörtgeni ve çizgileri çizen fonksiyonu çağır\n    this.drawRectangle(this.width, this.height, this.gap);\n\n    // Server'a gönderilecek verileri oluştur\n    let data = {\n      width: this.width,\n      height: this.height,\n      gap: this.gap\n    };\n\n    // Server'a göndermek için HTTP servisini kullan\n    this.http.post('server_url', data).subscribe(\n      response => {\n        // Server'dan gelen yanıtı işle\n        console.log(response);\n      },\n      error => {\n        // Hata durumunda mesaj göster\n        console.error(error);\n      }\n    );\n  }\n\n  drawRectangle(width: number, height: number, gap: number) {\n    // Bir canvas elementi oluştur\n    let canvas = document.createElement('canvas');\n    canvas.width = width;\n    canvas.height = height;\n\n    // Canvas'ın context'ini al\n    let ctx = canvas.getContext('2d');\n\n    // Dikdörtgeni çiz\n    ctx?.strokeRect(0, 0, width, height);\n\n    // Yatay çizgileri çiz\n    for (let y = gap; y < height; y += gap) {\n      ctx?.moveTo(0, y);\n      ctx?.lineTo(width, y);\n      ctx?.stroke();\n    }\n\n    // Dikey çizgileri çiz\n    for (let x = gap; x < width; x += gap) {\n      ctx?.moveTo(x, 0);\n      ctx?.lineTo(x, height);\n      ctx?.stroke();\n    }\n\n    // Canvas'ı sayfaya ekle\n    document.body.appendChild(canvas);\n  }\n}\n","<form (ngSubmit)=\"onSubmit()\" class=\"form-inline float-right\">\n  <div class=\"form-group\">\n    <label for=\"width\">Dikdörtgenin genişliği:</label>\n    <input type=\"number\" id=\"width\" name=\"width\" class=\"form-control\" [(ngModel)]=\"width\">\n  </div>\n  <div class=\"form-group\">\n    <label for=\"height\">Dikdörtgenin yüksekliği:</label>\n    <input type=\"number\" id=\"height\" name=\"height\" class=\"form-control\" [(ngModel)]=\"height\">\n  </div>\n  <div class=\"form-group\">\n    <label for=\"gap\">Çizgilerin aralığı:</label>\n    <input type=\"number\" id=\"gap\" name=\"gap\" class=\"form-control\" [(ngModel)]=\"gap\">\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary\">Gönder</button>\n</form>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}