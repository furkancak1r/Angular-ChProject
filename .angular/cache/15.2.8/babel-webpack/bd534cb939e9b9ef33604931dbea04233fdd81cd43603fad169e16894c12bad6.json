{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nfunction HomeComponent_ng_container_9_ng_container_7_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"label\", 14);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 15);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const line_r4 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"for\", \"horizontalDistance\" + line_r4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" Yataydaki \", line_r4, \". \\u00E7izginin \", line_r4 === 1 ? \"dikd\\u00F6rtgenin \\u00FCst \\u00E7izgisi ile\" : line_r4 - 1 + \". \\u00E7izgi ile\", \" aras\\u0131ndaki mesafe ka\\u00E7 mm olmal\\u0131: \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"id\", \"horizontalDistance\" + line_r4)(\"name\", \"horizontalDistance\" + line_r4);\n  }\n}\nfunction HomeComponent_ng_container_9_ng_container_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, HomeComponent_ng_container_9_ng_container_7_ng_container_1_Template, 4, 5, \"ng-container\", 13);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.getLinesArray(ctx_r1.horizontalLines.value));\n  }\n}\nfunction HomeComponent_ng_container_9_ng_container_8_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"label\", 14);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 16);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const line_r6 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"for\", \"verticalDistance\" + line_r6);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" Dikeydeki \", line_r6, \". \\u00E7izginin \", line_r6 === 1 ? \"dikd\\u00F6rtgenin sol \\u00E7izgisi ile\" : line_r6 - 1 + \". \\u00E7izgi ile\", \" aras\\u0131ndaki mesafe ka\\u00E7 mm olmal\\u0131: \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"id\", \"verticalDistance\" + line_r6)(\"name\", \"verticalDistance\" + line_r6);\n  }\n}\nfunction HomeComponent_ng_container_9_ng_container_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, HomeComponent_ng_container_9_ng_container_8_ng_container_1_Template, 4, 5, \"ng-container\", 13);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.getLinesArray(ctx_r2.verticalLines.value));\n  }\n}\nfunction HomeComponent_ng_container_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"label\", 9);\n    i0.ɵɵtext(2, \"Yatayda ka\\u00E7 adet \\u00E7izgi olsun:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 10);\n    i0.ɵɵelementStart(4, \"label\", 11);\n    i0.ɵɵtext(5, \"Dikeyde ka\\u00E7 adet \\u00E7izgi olsun:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"input\", 12);\n    i0.ɵɵtemplate(7, HomeComponent_ng_container_9_ng_container_7_Template, 2, 1, \"ng-container\", 7);\n    i0.ɵɵtemplate(8, HomeComponent_ng_container_9_ng_container_8_Template, 2, 1, \"ng-container\", 7);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r0.horizontalLines == null ? null : ctx_r0.horizontalLines.value) > 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r0.verticalLines == null ? null : ctx_r0.verticalLines.value) > 0);\n  }\n}\nexport class HomeComponent {\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n    this.showHorizontalLines = false;\n    this.showVerticalLines = false;\n    this.otherDataForm = this.formBuilder.group({\n      width: null,\n      height: null,\n      horizontalLines: null,\n      verticalLines: null\n    });\n  }\n  ngOnInit() {}\n  getLinesArray(linesCount) {\n    return Array.from({\n      length: linesCount\n    }, (_, index) => index + 1);\n  }\n  onSubmit() {\n    // Handle form submission\n    // Access the form values using this.otherDataForm.value\n  }\n}\nHomeComponent.ɵfac = function HomeComponent_Factory(t) {\n  return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\nHomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HomeComponent,\n  selectors: [[\"app-home\"]],\n  decls: 12,\n  vars: 2,\n  consts: [[2, \"display\", \"flex\", \"justify-content\", \"flex-end\", \"align-items\", \"center\", \"height\", \"100vh\"], [1, \"col-md-4\"], [1, \"form-group\", \"mb-3\", 3, \"formGroup\", \"ngSubmit\"], [\"for\", \"width\", 1, \"mr-2\"], [\"type\", \"number\", \"id\", \"width\", \"name\", \"width\", \"formControlName\", \"width\", 1, \"form-control\", \"form-control-sm\"], [\"for\", \"height\", 1, \"mr-2\"], [\"type\", \"number\", \"id\", \"height\", \"name\", \"height\", \"formControlName\", \"height\", 1, \"form-control\", \"form-control-sm\"], [4, \"ngIf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [\"for\", \"horizontalLines\", 1, \"mr-2\"], [\"type\", \"number\", \"id\", \"horizontalLines\", \"name\", \"horizontalLines\", \"formControlName\", \"horizontalLines\", 1, \"form-control\", \"form-control-sm\"], [\"for\", \"verticalLines\", 1, \"mr-2\"], [\"type\", \"number\", \"id\", \"verticalLines\", \"name\", \"verticalLines\", \"formControlName\", \"verticalLines\", 1, \"form-control\", \"form-control-sm\"], [4, \"ngFor\", \"ngForOf\"], [1, \"mr-2\", 3, \"for\"], [\"formControlName\", \"'horizontalDistance' + line\", \"type\", \"number\", 1, \"form-control\", \"form-control-sm\", 3, \"id\", \"name\"], [\"formControlName\", \"'verticalDistance' + line\", \"type\", \"number\", 1, \"form-control\", \"form-control-sm\", 3, \"id\", \"name\"]],\n  template: function HomeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function HomeComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(3, \"label\", 3);\n      i0.ɵɵtext(4, \"Dikd\\u00F6rtgenin geni\\u015Fli\\u011Fi (mm):\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"input\", 4);\n      i0.ɵɵelementStart(6, \"label\", 5);\n      i0.ɵɵtext(7, \"Dikd\\u00F6rtgenin y\\u00FCksekli\\u011Fi (mm):\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 6);\n      i0.ɵɵtemplate(9, HomeComponent_ng_container_9_Template, 9, 2, \"ng-container\", 7);\n      i0.ɵɵelementStart(10, \"button\", 8);\n      i0.ɵɵtext(11, \"G\\u00F6nder\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.otherDataForm);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", (ctx.width == null ? null : ctx.width.value) > 0 && (ctx.width == null ? null : ctx.width.value) !== null && (ctx.height == null ? null : ctx.height.value) > 0 && (ctx.height == null ? null : ctx.height.value) !== null);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;IAmBUA,6BAAwE;IACtEA,iCAAwD;IACtDA,YAEF;IAAAA,iBAAQ;IACRA,4BACqG;IACvGA,0BAAe;;;;IANNA,eAAmC;IAAnCA,oDAAmC;IACxCA,eAEF;IAFEA,wNAEF;IACOA,eAAkC;IAAlCA,mDAAkC;;;;;IAN7CA,6BAAiD;IAC/CA,+GAOe;IACjBA,0BAAe;;;;IARkBA,eAAuC;IAAvCA,4EAAuC;;;;;IAWtEA,6BAAsE;IACpEA,iCAAsD;IACpDA,YAGF;IAAAA,iBAAQ;IACRA,4BACmG;IACrGA,0BAAe;;;;IAPNA,eAAiC;IAAjCA,kDAAiC;IACtCA,eAGF;IAHEA,mNAGF;IACOA,eAAgC;IAAhCA,iDAAgC;;;;;IAP3CA,6BAA+C;IAC7CA,+GAQe;IACjBA,0BAAe;;;;IATkBA,eAAqC;IAArCA,0EAAqC;;;;;IArBxEA,6BAA+G;IAC7GA,gCAA0C;IAAAA,uDAA6B;IAAAA,iBAAQ;IAC/EA,4BACsC;IAEtCA,iCAAwC;IAAAA,uDAA6B;IAAAA,iBAAQ;IAC7EA,4BACoC;IAEpCA,+FASe;IAEfA,+FAUe;IACjBA,0BAAe;;;;IAtBEA,eAAgC;IAAhCA,iGAAgC;IAWhCA,eAA8B;IAA9BA,6FAA8B;;;ACrBrD,OAAM,MAAOC,aAAa;EAKxBC,YAAoBC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;IAH/B,wBAAmB,GAAY,KAAK;IACpC,sBAAiB,GAAY,KAAK;IAGhC,IAAI,CAACC,aAAa,GAAG,IAAI,CAACD,WAAW,CAACE,KAAK,CAAC;MAC1CC,KAAK,EAAE,IAAI;MACXC,MAAM,EAAE,IAAI;MACZC,eAAe,EAAE,IAAI;MACrBC,aAAa,EAAE;KAChB,CAAC;EACJ;EAEAC,QAAQ,IAAU;EAElBC,aAAa,CAACC,UAAkB;IAC9B,OAAOC,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAEH;IAAU,CAAE,EAAE,CAACI,CAAC,EAAEC,KAAK,KAAKA,KAAK,GAAG,CAAC,CAAC;EACpE;EAEAC,QAAQ;IACN;IACA;EAAA;;AAtBSjB,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAkB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDR1BvB,8BAA2F;MAEjFA;QAAA,OAAYwB,cAAU;MAAA,EAAC;MAC3BxB,gCAAgC;MAAAA,2DAA4B;MAAAA,iBAAQ;MACpEA,2BAA4G;MAE5GA,gCAAiC;MAAAA,4DAA6B;MAAAA,iBAAQ;MACtEA,2BAA+G;MAE/GA,gFA+Be;MAEfA,kCAA8C;MAAAA,4BAAM;MAAAA,iBAAS;;;MAxCjCA,eAA2B;MAA3BA,6CAA2B;MAOxCA,eAA8F;MAA9FA,iPAA8F","names":["i0","HomeComponent","constructor","formBuilder","otherDataForm","group","width","height","horizontalLines","verticalLines","ngOnInit","getLinesArray","linesCount","Array","from","length","_","index","onSubmit","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Program Files (x86)\\Kodlar\\Furkan_ChProject\\ChProject_Client\\ChProject-Angular-RectangleDrawer\\src\\app\\home\\home.component.html","C:\\Program Files (x86)\\Kodlar\\Furkan_ChProject\\ChProject_Client\\ChProject-Angular-RectangleDrawer\\src\\app\\home\\home.component.ts"],"sourcesContent":["<div style=\"display: flex; justify-content: flex-end; align-items: center; height: 100vh;\">\n  <div class=\"col-md-4\">\n    <form (ngSubmit)=\"onSubmit()\" [formGroup]=\"otherDataForm\" class=\"form-group mb-3\">\n      <label for=\"width\" class=\"mr-2\">Dikdörtgenin genişliği (mm):</label>\n      <input type=\"number\" id=\"width\" name=\"width\" class=\"form-control form-control-sm\" formControlName=\"width\" />\n\n      <label for=\"height\" class=\"mr-2\">Dikdörtgenin yüksekliği (mm):</label>\n      <input type=\"number\" id=\"height\" name=\"height\" class=\"form-control form-control-sm\" formControlName=\"height\" />\n\n      <ng-container *ngIf=\"width?.value > 0 && width?.value !== null && height?.value > 0 && height?.value !== null\">\n        <label for=\"horizontalLines\" class=\"mr-2\">Yatayda kaç adet çizgi olsun:</label>\n        <input type=\"number\" id=\"horizontalLines\" name=\"horizontalLines\" class=\"form-control form-control-sm\"\n          formControlName=\"horizontalLines\" />\n\n        <label for=\"verticalLines\" class=\"mr-2\">Dikeyde kaç adet çizgi olsun:</label>\n        <input type=\"number\" id=\"verticalLines\" name=\"verticalLines\" class=\"form-control form-control-sm\"\n          formControlName=\"verticalLines\" />\n\n        <ng-container *ngIf=\"horizontalLines?.value > 0\">\n          <ng-container *ngFor=\"let line of getLinesArray(horizontalLines.value)\">\n            <label [for]=\"'horizontalDistance' + line\" class=\"mr-2\">\n              Yataydaki {{ line }}. çizginin {{ line === 1 ? 'dikdörtgenin üst çizgisi ile' : (line - 1) + '. çizgi ile' }}\n              arasındaki mesafe kaç mm olmalı:\n            </label>\n            <input [id]=\"'horizontalDistance' + line\" [name]=\"'horizontalDistance' + line\"\n              class=\"form-control form-control-sm\" formControlName=\"'horizontalDistance' + line\" type=\"number\" />\n          </ng-container>\n        </ng-container>\n\n        <ng-container *ngIf=\"verticalLines?.value > 0\">\n          <ng-container *ngFor=\"let line of getLinesArray(verticalLines.value)\">\n            <label [for]=\"'verticalDistance' + line\" class=\"mr-2\">\n              Dikeydeki {{ line }}. çizginin\n              {{ line === 1 ? 'dikdörtgenin sol çizgisi ile' : (line - 1) + '. çizgi ile' }}\n              arasındaki mesafe kaç mm olmalı:\n            </label>\n            <input [id]=\"'verticalDistance' + line\" [name]=\"'verticalDistance' + line\"\n              class=\"form-control form-control-sm\" formControlName=\"'verticalDistance' + line\" type=\"number\" />\n          </ng-container>\n        </ng-container>\n      </ng-container>\n\n      <button type=\"submit\" class=\"btn btn-primary\">Gönder</button>\n    </form>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n  otherDataForm: FormGroup;\n  showHorizontalLines: boolean = false;\n  showVerticalLines: boolean = false;\n\n  constructor(private formBuilder: FormBuilder) {\n    this.otherDataForm = this.formBuilder.group({\n      width: null,\n      height: null,\n      horizontalLines: null,\n      verticalLines: null\n    });\n  }\n\n  ngOnInit(): void {}\n\n  getLinesArray(linesCount: number): number[] {\n    return Array.from({ length: linesCount }, (_, index) => index + 1);\n  }\n\n  onSubmit(): void {\n    // Handle form submission\n    // Access the form values using this.otherDataForm.value\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}