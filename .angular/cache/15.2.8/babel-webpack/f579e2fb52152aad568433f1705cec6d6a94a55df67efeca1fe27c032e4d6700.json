{"ast":null,"code":"import { FormGroup, FormArray, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/forms\";\nexport class HomeComponent {\n  constructor(http) {\n    this.http = http;\n    this.width = new FormControl('', Validators.required);\n    this.height = new FormControl('', Validators.required);\n    this.hlines = new FormControl('', Validators.required);\n    this.vlines = new FormControl('', Validators.required);\n    this.otherDataForm = new FormGroup({\n      width: this.width,\n      height: this.height,\n      hlines: this.hlines,\n      ingredients: new FormArray([]),\n      vlines: new FormArray([])\n    });\n  }\n  onSubmit() {\n    let hlinesArray = this.otherDataForm.get('ingredients');\n    let hlines = Number(this.hlines.value);\n    for (let i = 0; i < hlines; i++) {\n      let hgap = new FormControl('', Validators.required);\n      hlinesArray.push(hgap);\n    }\n    let vlinesArray = this.otherDataForm.get('vlines');\n    let vlines = Number(this.vlines.value);\n    for (let j = 0; j < vlines; j++) {\n      let vgap = new FormControl('', Validators.required);\n      vlinesArray.push(vgap);\n    }\n    this.drawRectangle(Number(this.width.value), Number(this.height.value), Number(this.hlines.value), Number(this.vlines.value));\n    let data = {\n      width: Number(this.width.value),\n      height: Number(this.height.value),\n      hgap: this.otherDataForm.get('ingredients').value,\n      vgap: this.otherDataForm.get('vlines').value\n    };\n    this.http.post('server_url', data).subscribe(response => {\n      console.log(response);\n    }, error => {\n      console.error(error);\n    });\n  }\n  drawRectangle(width, height, hlines, vlines) {\n    if (width == null || height == null || hlines == null || vlines == null) return;\n    let canvas = document.createElement('canvas');\n    canvas.width = width;\n    canvas.height = height;\n    let ctx = canvas.getContext('2d');\n    ctx?.strokeRect(0, 0, width, height);\n    let hlinesArray = this.otherDataForm.get('ingredients');\n    for (let i = 0; i < hlinesArray.length; i++) {\n      let y = Number(hlinesArray.controls[i].value);\n      ctx?.moveTo(0, y);\n      ctx?.lineTo(width, y);\n      ctx?.stroke();\n    }\n    let vlinesArray = this.otherDataForm.get('vlines');\n    for (let j = 0; j < vlinesArray.length; j++) {\n      let x = Number(vlinesArray.controls[j].value);\n      ctx?.moveTo(x, 0);\n      ctx?.lineTo(x, height);\n      ctx?.stroke();\n    }\n    document.body.appendChild(canvas);\n  }\n}\nHomeComponent.ɵfac = function HomeComponent_Factory(t) {\n  return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nHomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HomeComponent,\n  selectors: [[\"app-home\"]],\n  decls: 11,\n  vars: 5,\n  consts: [[2, \"display\", \"flex\", \"justify-content\", \"flex-end\", \"align-items\", \"center\", \"height\", \"100vh\"], [1, \"col-md-4\"], [1, \"form-group\", \"mb-3\", 3, \"formGroup\", \"ngSubmit\"], [\"for\", \"width\", 1, \"mr-2\"], [\"type\", \"number\", \"id\", \"width\", \"name\", \"width\", 1, \"form-control\", \"form-control-sm\", 3, \"formControlName\", \"value\"], [\"for\", \"height\", 1, \"mr-2\"], [\"type\", \"number\", \"id\", \"height\", \"name\", \"height\", 1, \"form-control\", \"form-control-sm\", 3, \"formControlName\", \"value\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n  template: function HomeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function HomeComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(3, \"label\", 3);\n      i0.ɵɵtext(4, \"Dikd\\u00F6rtgenin geni\\u015Fli\\u011Fi (mm):\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"input\", 4);\n      i0.ɵɵelementStart(6, \"label\", 5);\n      i0.ɵɵtext(7, \"Dikd\\u00F6rtgenin y\\u00FCksekli\\u011Fi (mm):\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 6);\n      i0.ɵɵelementStart(9, \"button\", 7);\n      i0.ɵɵtext(10, \"G\\u00F6nder\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.otherDataForm);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formControlName\", \"width\")(\"value\", ctx.width.value);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formControlName\", \"height\")(\"value\", ctx.height.value);\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormGroup","FormArray","FormControl","Validators","HomeComponent","constructor","http","required","width","height","hlines","ingredients","vlines","onSubmit","hlinesArray","otherDataForm","get","Number","value","i","hgap","push","vlinesArray","j","vgap","drawRectangle","data","post","subscribe","response","console","log","error","canvas","document","createElement","ctx","getContext","strokeRect","length","y","controls","moveTo","lineTo","stroke","x","body","appendChild","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Program Files (x86)\\Kodlar\\Furkan_ChProject\\ChProject_Client\\ChProject-Angular-RectangleDrawer\\src\\app\\home\\home.component.ts","C:\\Program Files (x86)\\Kodlar\\Furkan_ChProject\\ChProject_Client\\ChProject-Angular-RectangleDrawer\\src\\app\\home\\home.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { FormGroup, FormArray, FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent {\n\n  width = new FormControl('', Validators.required);\n  height = new FormControl('', Validators.required);\n  hlines = new FormControl('', Validators.required);\n  vlines = new FormControl('', Validators.required);\n\n  otherDataForm: any = new FormGroup({\n    width: this.width,\n    height: this.height,\n    hlines: this.hlines,\n    ingredients: new FormArray([]),\n    vlines: new FormArray([])\n  });\n\n  constructor(private http: HttpClient) { }\n\n  onSubmit() {\n    let hlinesArray = this.otherDataForm.get('ingredients') as FormArray;\n    let hlines = Number(this.hlines.value);\n\n    for (let i = 0; i < hlines; i++) {\n      let hgap = new FormControl('', Validators.required);\n      hlinesArray.push(hgap);\n    }\n\n    let vlinesArray = this.otherDataForm.get('vlines') as FormArray;\n    let vlines = Number(this.vlines.value);\n\n    for (let j = 0; j < vlines; j++) {\n      let vgap = new FormControl('', Validators.required);\n      vlinesArray.push(vgap);\n    }\n\n    this.drawRectangle(\n      Number(this.width.value),\n      Number(this.height.value),\n      Number(this.hlines.value),\n      Number(this.vlines.value)\n    );\n\n    let data = {\n      width: Number(this.width.value),\n      height: Number(this.height.value),\n      hgap: this.otherDataForm.get('ingredients').value,\n      vgap: this.otherDataForm.get('vlines').value,\n    };\n\n    this.http.post('server_url', data).subscribe(\n      response => {\n        console.log(response);\n      },\n      error => {\n        console.error(error);\n      }\n    );\n  }\n\n  drawRectangle(width: number | null, height: number | null, hlines: number | null, vlines: number | null) {\n    if (width == null || height == null || hlines == null || vlines == null) return;\n\n    let canvas = document.createElement('canvas');\n    canvas.width = width;\n    canvas.height = height;\n\n    let ctx = canvas.getContext('2d');\n\n    ctx?.strokeRect(0, 0, width, height);\n\n    let hlinesArray = this.otherDataForm.get('ingredients') as FormArray;\n    for (let i = 0; i < hlinesArray.length; i++) {\n      let y = Number(hlinesArray.controls[i].value);\n      ctx?.moveTo(0, y);\n      ctx?.lineTo(width, y);\n      ctx?.stroke();\n    }\n\n    let vlinesArray = this.otherDataForm.get('vlines') as FormArray;\n    for (let j = 0; j < vlinesArray.length; j++) {\n      let x = Number(vlinesArray.controls[j].value);\n      ctx?.moveTo(x, 0);\n      ctx?.lineTo(x, height);\n      ctx?.stroke();\n    }\n\n    document.body.appendChild(canvas);\n  }\n}\n","<div\n  style=\"\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    height: 100vh;\n  \"\n>\n  <div class=\"col-md-4\">\n    <form\n      (ngSubmit)=\"onSubmit()\"\n      [formGroup]=\"otherDataForm\"\n      class=\"form-group mb-3\"\n    >\n      <label for=\"width\" class=\"mr-2\">Dikdörtgenin genişliği (mm):</label>\n      <input\n        type=\"number\"\n        id=\"width\"\n        name=\"width\"\n        class=\"form-control form-control-sm\"\n        [formControlName]=\"'width'\"\n        [value]=\"width.value\"\n      />\n\n      <label for=\"height\" class=\"mr-2\">Dikdörtgenin yüksekliği (mm):</label>\n      <input\n        type=\"number\"\n        id=\"height\"\n        name=\"height\"\n        class=\"form-control form-control-sm\"\n        [formControlName]=\"'height'\"\n        [value]=\"height.value\"\n      />\n\n      <button type=\"submit\" class=\"btn btn-primary\">Gönder</button>\n    </form>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}