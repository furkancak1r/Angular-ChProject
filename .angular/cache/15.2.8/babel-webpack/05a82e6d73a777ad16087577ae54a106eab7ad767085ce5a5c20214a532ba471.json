{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nconst _c0 = function (a1) {\n  return [\"horizontalDistances\", a1];\n};\nfunction HomeComponent_ng_container_9_ng_container_7_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"label\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelement(3, \"input\", 16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const i_r5 = ctx.index;\n    const ctx_r2 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i_r5 === 0 ? \"Yataydaki 1. \\u00E7izginin dikd\\u00F6rtgen ile aras\\u0131ndaki mesafe ka\\u00E7 mm olmal\\u0131:\" : \"Yataydaki \" + (i_r5 + 1) + \". \\u00E7izginin \" + i_r5 + \". \\u00E7izgi ile aras\\u0131ndaki mesafe ka\\u00E7 mm olmal\\u0131:\", \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControl\", ctx_r2.otherDataForm.get(i0.ɵɵpureFunction1(2, _c0, \"distance_\" + i_r5)));\n  }\n}\nconst _c1 = function (a1) {\n  return [\"verticalDistances\", a1];\n};\nfunction HomeComponent_ng_container_9_ng_container_7_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"label\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelement(3, \"input\", 16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const i_r7 = ctx.index;\n    const ctx_r3 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i_r7 === 0 ? \"Dikeyde 1. \\u00E7izginin dikd\\u00F6rtgen ile aras\\u0131ndaki mesafe ka\\u00E7 mm olmal\\u0131:\" : \"Dikeyde \" + (i_r7 + 1) + \". \\u00E7izginin \" + i_r7 + \". \\u00E7izgi ile aras\\u0131ndaki mesafe ka\\u00E7 mm olmal\\u0131:\", \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControl\", ctx_r3.otherDataForm.get(i0.ɵɵpureFunction1(2, _c1, \"distance_\" + i_r7)));\n  }\n}\nfunction HomeComponent_ng_container_9_ng_container_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 13);\n    i0.ɵɵtemplate(2, HomeComponent_ng_container_9_ng_container_7_ng_container_2_Template, 4, 4, \"ng-container\", 14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 15);\n    i0.ɵɵtemplate(4, HomeComponent_ng_container_9_ng_container_7_ng_container_4_Template, 4, 4, \"ng-container\", 14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.getLinesArray(ctx_r1.otherDataForm.get(\"horizontalLines\").value));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.getLinesArray(ctx_r1.otherDataForm.get(\"verticalLines\").value));\n  }\n}\nfunction HomeComponent_ng_container_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"label\", 9);\n    i0.ɵɵtext(2, \"Yatayda ka\\u00E7 adet \\u00E7izgi olsun:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"input\", 10);\n    i0.ɵɵlistener(\"change\", function HomeComponent_ng_container_9_Template_input_change_3_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.createHorizontalDistances());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"label\", 11);\n    i0.ɵɵtext(5, \"Dikeyde ka\\u00E7 adet \\u00E7izgi olsun:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"input\", 12);\n    i0.ɵɵlistener(\"change\", function HomeComponent_ng_container_9_Template_input_change_6_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.createVerticalDistances());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(7, HomeComponent_ng_container_9_ng_container_7_Template, 5, 2, \"ng-container\", 7);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"formControl\", ctx_r0.otherDataForm.get(\"horizontalLines\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"formControl\", ctx_r0.otherDataForm.get(\"verticalLines\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.otherDataForm.get(\"horizontalLines\").value > 0 && ctx_r0.otherDataForm.get(\"verticalLines\").value > 0);\n  }\n}\nexport class HomeComponent {\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n  }\n  ngOnInit() {\n    this.otherDataForm = this.formBuilder.group({\n      width: new FormControl(null, Validators.required),\n      height: new FormControl(null, Validators.required),\n      horizontalLines: new FormControl(null),\n      verticalLines: new FormControl(null),\n      horizontalDistances: this.formBuilder.group({}),\n      verticalDistances: this.formBuilder.group({})\n    });\n  }\n  onSubmit() {\n    // İşlemler form gönderildiğinde yapılacak\n  }\n  createHorizontalDistances() {\n    // Yatay mesafeleri oluşturma işlemleri\n  }\n  createVerticalDistances() {\n    // Dikey mesafeleri oluşturma işlemleri\n  }\n  getLinesArray(count) {\n    return Array(count).fill(0).map((_, index) => index);\n  }\n}\nHomeComponent.ɵfac = function HomeComponent_Factory(t) {\n  return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\nHomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HomeComponent,\n  selectors: [[\"app-home\"]],\n  decls: 12,\n  vars: 4,\n  consts: [[2, \"display\", \"flex\", \"justify-content\", \"flex-end\", \"align-items\", \"center\", \"height\", \"100vh\"], [1, \"col-md-4\"], [1, \"form-group\", \"mb-3\", 3, \"formGroup\", \"ngSubmit\"], [\"for\", \"width\", 1, \"mr-2\"], [\"type\", \"number\", \"id\", \"width\", \"name\", \"width\", 1, \"form-control\", \"form-control-sm\", 3, \"formControl\"], [\"for\", \"height\", 1, \"mr-2\"], [\"type\", \"number\", \"id\", \"height\", \"name\", \"height\", 1, \"form-control\", \"form-control-sm\", 3, \"formControl\"], [4, \"ngIf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [\"for\", \"horizontalLines\", 1, \"mr-2\"], [\"type\", \"number\", \"id\", \"horizontalLines\", \"name\", \"horizontalLines\", 1, \"form-control\", \"form-control-sm\", 3, \"formControl\", \"change\"], [\"for\", \"verticalLines\", 1, \"mr-2\"], [\"type\", \"number\", \"id\", \"verticalLines\", \"name\", \"verticalLines\", 1, \"form-control\", \"form-control-sm\", 3, \"formControl\", \"change\"], [\"formGroupName\", \"horizontalDistances\"], [4, \"ngFor\", \"ngForOf\"], [\"formGroupName\", \"verticalDistances\"], [\"type\", \"number\", 1, \"form-control\", \"form-control-sm\", 3, \"formControl\"]],\n  template: function HomeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function HomeComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(3, \"label\", 3);\n      i0.ɵɵtext(4, \"Dikd\\u00F6rtgenin geni\\u015Fli\\u011Fi (mm):\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"input\", 4);\n      i0.ɵɵelementStart(6, \"label\", 5);\n      i0.ɵɵtext(7, \"Dikd\\u00F6rtgenin y\\u00FCksekli\\u011Fi (mm):\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 6);\n      i0.ɵɵtemplate(9, HomeComponent_ng_container_9_Template, 8, 3, \"ng-container\", 7);\n      i0.ɵɵelementStart(10, \"button\", 8);\n      i0.ɵɵtext(11, \"G\\u00F6nder\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.otherDataForm);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formControl\", ctx.otherDataForm.get(\"width\"));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formControl\", ctx.otherDataForm.get(\"height\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.otherDataForm.get(\"width\").value > 0 && ctx.otherDataForm.get(\"height\").value > 0);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormControlDirective, i1.FormGroupDirective, i1.FormGroupName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAAiCA,WAAW,EAAEC,UAAU,QAAQ,gBAAgB;;;;;;;;;ICapEC,6BAA4G;IAC1GA,6BAAO;IACLA,YACA;IAAAA,4BAAwI;IAC1IA,iBAAQ;IACVA,0BAAe;;;;;IAHXA,eACA;IADAA,2QACA;IAAqBA,eAA2E;IAA3EA,sGAA2E;;;;;;;;IAKpGA,6BAA0G;IACxGA,6BAAO;IACLA,YACA;IAAAA,4BAAsI;IACxIA,iBAAQ;IACVA,0BAAe;;;;;IAHXA,eACA;IADAA,uQACA;IAAqBA,eAAyE;IAAzEA,sGAAyE;;;;;IAbtGA,6BAAqH;IACnHA,+BAAyC;IACvCA,+GAKe;IACjBA,iBAAM;IACNA,+BAAuC;IACrCA,+GAKe;IACjBA,iBAAM;IACRA,0BAAe;;;;IAfoBA,eAA8D;IAA9DA,iGAA8D;IAQ9DA,eAA4D;IAA5DA,+FAA4D;;;;;;IAfjGA,6BAAoG;IAClGA,gCAA0C;IAAAA,uDAA6B;IAAAA,iBAAQ;IAC/EA,iCAAoM;IAAzCA;MAAAA;MAAA;MAAA,OAAUA,iDAA2B;IAAA,EAAC;IAAjMA,iBAAoM;IACpMA,iCAAwC;IAAAA,uDAA6B;IAAAA,iBAAQ;IAC7EA,iCAA4L;IAAvCA;MAAAA;MAAA;MAAA,OAAUA,gDAAyB;IAAA,EAAC;IAAzLA,iBAA4L;IAC5LA,+FAiBe;IACjBA,0BAAe;;;;IArByFA,eAAoD;IAApDA,yEAAoD;IAExDA,eAAkD;IAAlDA,uEAAkD;IACrIA,eAAoG;IAApGA,mIAAoG;;;ADJ3H,OAAM,MAAOC,aAAa;EAGxBC,YAAoBC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;EAAiB;EAEhDC,QAAQ;IACN,IAAI,CAACC,aAAa,GAAG,IAAI,CAACF,WAAW,CAACG,KAAK,CAAC;MAC1CC,KAAK,EAAE,IAAIT,WAAW,CAAC,IAAI,EAAEC,UAAU,CAACS,QAAQ,CAAC;MACjDC,MAAM,EAAE,IAAIX,WAAW,CAAC,IAAI,EAAEC,UAAU,CAACS,QAAQ,CAAC;MAClDE,eAAe,EAAE,IAAIZ,WAAW,CAAC,IAAI,CAAC;MACtCa,aAAa,EAAE,IAAIb,WAAW,CAAC,IAAI,CAAC;MACpCc,mBAAmB,EAAE,IAAI,CAACT,WAAW,CAACG,KAAK,CAAC,EAAE,CAAC;MAC/CO,iBAAiB,EAAE,IAAI,CAACV,WAAW,CAACG,KAAK,CAAC,EAAE;KAC7C,CAAC;EACJ;EAEAQ,QAAQ;IACN;EAAA;EAGFC,yBAAyB;IACvB;EAAA;EAGFC,uBAAuB;IACrB;EAAA;EAGFC,aAAa,CAACC,KAAa;IACzB,OAAOC,KAAK,CAACD,KAAK,CAAC,CAACE,IAAI,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,KAAKA,KAAK,CAAC;EACtD;;AA9BWtB,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAuB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCR1B5B,8BAA2F;MAErDA;QAAA,OAAY6B,cAAU;MAAA,EAAC;MACvD7B,gCAAgC;MAAAA,2DAA4B;MAAAA,iBAAQ;MACpEA,2BAA+H;MAC/HA,gCAAiC;MAAAA,4DAA6B;MAAAA,iBAAQ;MACtEA,2BAAkI;MAClIA,gFAuBe;MACfA,kCAA8C;MAAAA,4BAAM;MAAAA,iBAAS;;;MA7BzDA,eAA2B;MAA3BA,6CAA2B;MAEmDA,eAA0C;MAA1CA,4DAA0C;MAExCA,eAA2C;MAA3CA,6DAA2C;MAChHA,eAAmF;MAAnFA,4GAAmF","names":["FormControl","Validators","i0","HomeComponent","constructor","formBuilder","ngOnInit","otherDataForm","group","width","required","height","horizontalLines","verticalLines","horizontalDistances","verticalDistances","onSubmit","createHorizontalDistances","createVerticalDistances","getLinesArray","count","Array","fill","map","_","index","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Program Files (x86)\\Kodlar\\Furkan_ChProject\\ChProject_Client\\ChProject-Angular-RectangleDrawer\\src\\app\\home\\home.component.ts","C:\\Program Files (x86)\\Kodlar\\Furkan_ChProject\\ChProject_Client\\ChProject-Angular-RectangleDrawer\\src\\app\\home\\home.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n  otherDataForm!: FormGroup;\n\n  constructor(private formBuilder: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.otherDataForm = this.formBuilder.group({\n      width: new FormControl(null, Validators.required),\n      height: new FormControl(null, Validators.required),\n      horizontalLines: new FormControl(null),\n      verticalLines: new FormControl(null),\n      horizontalDistances: this.formBuilder.group({}),\n      verticalDistances: this.formBuilder.group({})\n    });\n  }\n\n  onSubmit(): void {\n    // İşlemler form gönderildiğinde yapılacak\n  }\n\n  createHorizontalDistances(): void {\n    // Yatay mesafeleri oluşturma işlemleri\n  }\n\n  createVerticalDistances(): void {\n    // Dikey mesafeleri oluşturma işlemleri\n  }\n\n  getLinesArray(count: number): number[] {\n    return Array(count).fill(0).map((_, index) => index);\n  }\n}\n","<div style=\"display: flex; justify-content: flex-end; align-items: center; height: 100vh;\">\n  <div class=\"col-md-4\">\n    <form [formGroup]=\"otherDataForm\" (ngSubmit)=\"onSubmit()\" class=\"form-group mb-3\">\n      <label for=\"width\" class=\"mr-2\">Dikdörtgenin genişliği (mm):</label>\n      <input type=\"number\" id=\"width\" name=\"width\" class=\"form-control form-control-sm\" [formControl]=\"otherDataForm.get('width')\" />\n      <label for=\"height\" class=\"mr-2\">Dikdörtgenin yüksekliği (mm):</label>\n      <input type=\"number\" id=\"height\" name=\"height\" class=\"form-control form-control-sm\" [formControl]=\"otherDataForm.get('height')\" />\n      <ng-container *ngIf=\"otherDataForm.get('width').value > 0 && otherDataForm.get('height').value > 0\">\n        <label for=\"horizontalLines\" class=\"mr-2\">Yatayda kaç adet çizgi olsun:</label>\n        <input type=\"number\" id=\"horizontalLines\" name=\"horizontalLines\" class=\"form-control form-control-sm\" [formControl]=\"otherDataForm.get('horizontalLines')\" (change)=\"createHorizontalDistances()\" />\n        <label for=\"verticalLines\" class=\"mr-2\">Dikeyde kaç adet çizgi olsun:</label>\n        <input type=\"number\" id=\"verticalLines\" name=\"verticalLines\" class=\"form-control form-control-sm\" [formControl]=\"otherDataForm.get('verticalLines')\" (change)=\"createVerticalDistances()\" />\n        <ng-container *ngIf=\"otherDataForm.get('horizontalLines').value > 0 && otherDataForm.get('verticalLines').value > 0\">\n          <div formGroupName=\"horizontalDistances\">\n            <ng-container *ngFor=\"let line of getLinesArray(otherDataForm.get('horizontalLines').value); let i = index\">\n              <label>\n                {{ i === 0 ? 'Yataydaki 1. çizginin dikdörtgen ile arasındaki mesafe kaç mm olmalı:' : 'Yataydaki ' + (i + 1) + '. çizginin ' + i + '. çizgi ile arasındaki mesafe kaç mm olmalı:' }}\n                <input type=\"number\" [formControl]=\"otherDataForm.get(['horizontalDistances', 'distance_' + i])\" class=\"form-control form-control-sm\" />\n              </label>\n            </ng-container>\n          </div>\n          <div formGroupName=\"verticalDistances\">\n            <ng-container *ngFor=\"let line of getLinesArray(otherDataForm.get('verticalLines').value); let i = index\">\n              <label>\n                {{ i === 0 ? 'Dikeyde 1. çizginin dikdörtgen ile arasındaki mesafe kaç mm olmalı:' : 'Dikeyde ' + (i + 1) + '. çizginin ' + i + '. çizgi ile arasındaki mesafe kaç mm olmalı:' }}\n                <input type=\"number\" [formControl]=\"otherDataForm.get(['verticalDistances', 'distance_' + i])\" class=\"form-control form-control-sm\" />\n              </label>\n            </ng-container>\n          </div>\n        </ng-container>\n      </ng-container>\n      <button type=\"submit\" class=\"btn btn-primary\">Gönder</button>\n    </form>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}