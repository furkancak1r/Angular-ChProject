{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nfunction HomeComponent_ng_container_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"label\", 9);\n    i0.ɵɵtext(2, \"Yatayda ka\\u00E7 adet \\u00E7izgi olsun:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 10);\n    i0.ɵɵelementStart(4, \"label\", 11);\n    i0.ɵɵtext(5, \"Dikeyde ka\\u00E7 adet \\u00E7izgi olsun:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"input\", 12);\n    i0.ɵɵelementContainerEnd();\n  }\n}\nexport class HomeComponent {\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n    this.showHorizontalLines = false;\n    this.showVerticalLines = false;\n  }\n  ngOnInit() {\n    this.otherDataForm = this.formBuilder.group({\n      width: ['', Validators.required],\n      height: ['', Validators.required],\n      horizontalLines: [''],\n      verticalLines: ['']\n    });\n  }\n  onSubmit() {\n    if (this.otherDataForm.valid) {\n      const width = this.otherDataForm.value.width;\n      const height = this.otherDataForm.value.height;\n      if (width > 0 && height > 0) {\n        this.showHorizontalLines = true;\n        this.showVerticalLines = true;\n      }\n    }\n  }\n  get width() {\n    return this.otherDataForm.get('width');\n  }\n  get height() {\n    return this.otherDataForm.get('height');\n  }\n  get horizontalLines() {\n    return this.otherDataForm.get('horizontalLines')?.value || 0;\n  }\n  get verticalLines() {\n    return this.otherDataForm.get('verticalLines')?.value || 0;\n  }\n}\nHomeComponent.ɵfac = function HomeComponent_Factory(t) {\n  return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\nHomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HomeComponent,\n  selectors: [[\"app-home\"]],\n  decls: 12,\n  vars: 2,\n  consts: [[2, \"display\", \"flex\", \"justify-content\", \"flex-end\", \"align-items\", \"center\", \"height\", \"100vh\"], [1, \"col-md-4\"], [1, \"form-group\", \"mb-3\", 3, \"formGroup\", \"ngSubmit\"], [\"for\", \"width\", 1, \"mr-2\"], [\"type\", \"number\", \"id\", \"width\", \"name\", \"width\", \"formControlName\", \"width\", 1, \"form-control\", \"form-control-sm\"], [\"for\", \"height\", 1, \"mr-2\"], [\"type\", \"number\", \"id\", \"height\", \"name\", \"height\", \"formControlName\", \"height\", 1, \"form-control\", \"form-control-sm\"], [4, \"ngIf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [\"for\", \"horizontalLines\", 1, \"mr-2\"], [\"type\", \"number\", \"id\", \"horizontalLines\", \"name\", \"horizontalLines\", \"formControlName\", \"horizontalLines\", 1, \"form-control\", \"form-control-sm\"], [\"for\", \"verticalLines\", 1, \"mr-2\"], [\"type\", \"number\", \"id\", \"verticalLines\", \"name\", \"verticalLines\", \"formControlName\", \"verticalLines\", 1, \"form-control\", \"form-control-sm\"]],\n  template: function HomeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function HomeComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(3, \"label\", 3);\n      i0.ɵɵtext(4, \"Dikd\\u00F6rtgenin geni\\u015Fli\\u011Fi (mm):\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"input\", 4);\n      i0.ɵɵelementStart(6, \"label\", 5);\n      i0.ɵɵtext(7, \"Dikd\\u00F6rtgenin y\\u00FCksekli\\u011Fi (mm):\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 6);\n      i0.ɵɵtemplate(9, HomeComponent_ng_container_9_Template, 7, 0, \"ng-container\", 7);\n      i0.ɵɵelementStart(10, \"button\", 8);\n      i0.ɵɵtext(11, \"G\\u00F6nder\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.otherDataForm);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", (ctx.width == null ? null : ctx.width.value) > 0 && (ctx.width == null ? null : ctx.width.value) !== null && (ctx.height == null ? null : ctx.height.value) > 0 && (ctx.height == null ? null : ctx.height.value) !== null);\n    }\n  },\n  dependencies: [i2.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;;ICQ7DC,6BAA+G;IAC7GA,gCAA0C;IAAAA,uDAA6B;IAAAA,iBAAQ;IAC/EA,4BACsC;IAEtCA,iCAAwC;IAAAA,uDAA6B;IAAAA,iBAAQ;IAC7EA,4BACoC;IACtCA,0BAAe;;;ADTrB,OAAM,MAAOC,aAAa;EAKxBC,YAAoBC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;IAH/B,wBAAmB,GAAY,KAAK;IACpC,sBAAiB,GAAY,KAAK;EAEc;EAEhDC,QAAQ;IACN,IAAI,CAACC,aAAa,GAAG,IAAI,CAACF,WAAW,CAACG,KAAK,CAAC;MAC1CC,KAAK,EAAE,CAAC,EAAE,EAAER,UAAU,CAACS,QAAQ,CAAC;MAChCC,MAAM,EAAE,CAAC,EAAE,EAAEV,UAAU,CAACS,QAAQ,CAAC;MACjCE,eAAe,EAAE,CAAC,EAAE,CAAC;MACrBC,aAAa,EAAE,CAAC,EAAE;KACnB,CAAC;EACJ;EAEAC,QAAQ;IACN,IAAI,IAAI,CAACP,aAAa,CAACQ,KAAK,EAAE;MAC5B,MAAMN,KAAK,GAAG,IAAI,CAACF,aAAa,CAACS,KAAK,CAACP,KAAK;MAC5C,MAAME,MAAM,GAAG,IAAI,CAACJ,aAAa,CAACS,KAAK,CAACL,MAAM;MAE9C,IAAIF,KAAK,GAAG,CAAC,IAAIE,MAAM,GAAG,CAAC,EAAE;QAC3B,IAAI,CAACM,mBAAmB,GAAG,IAAI;QAC/B,IAAI,CAACC,iBAAiB,GAAG,IAAI;;;EAGnC;EAEA,IAAIT,KAAK;IACP,OAAO,IAAI,CAACF,aAAa,CAACY,GAAG,CAAC,OAAO,CAAC;EACxC;EAEA,IAAIR,MAAM;IACR,OAAO,IAAI,CAACJ,aAAa,CAACY,GAAG,CAAC,QAAQ,CAAC;EACzC;EAEA,IAAIP,eAAe;IACjB,OAAO,IAAI,CAACL,aAAa,CAACY,GAAG,CAAC,iBAAiB,CAAC,EAAEH,KAAK,IAAI,CAAC;EAC9D;EAEA,IAAIH,aAAa;IACf,OAAO,IAAI,CAACN,aAAa,CAACY,GAAG,CAAC,eAAe,CAAC,EAAEH,KAAK,IAAI,CAAC;EAC5D;;AA1CWb,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAiB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCR1BtB,8BAA2F;MAEjFA;QAAA,OAAYuB,cAAU;MAAA,EAAC;MAC3BvB,gCAAgC;MAAAA,2DAA4B;MAAAA,iBAAQ;MACpEA,2BAA4G;MAE5GA,gCAAiC;MAAAA,4DAA6B;MAAAA,iBAAQ;MACtEA,2BAA+G;MAE/GA,gFAQe;MAEfA,kCAA8C;MAAAA,4BAAM;MAAAA,iBAAS;;;MAjBjCA,eAA2B;MAA3BA,6CAA2B;MAOxCA,eAA8F;MAA9FA,iPAA8F","names":["Validators","i0","HomeComponent","constructor","formBuilder","ngOnInit","otherDataForm","group","width","required","height","horizontalLines","verticalLines","onSubmit","valid","value","showHorizontalLines","showVerticalLines","get","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Program Files (x86)\\Kodlar\\Furkan_ChProject\\ChProject_Client\\ChProject-Angular-RectangleDrawer\\src\\app\\home\\home.component.ts","C:\\Program Files (x86)\\Kodlar\\Furkan_ChProject\\ChProject_Client\\ChProject-Angular-RectangleDrawer\\src\\app\\home\\home.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n  otherDataForm!: FormGroup;\n  showHorizontalLines: boolean = false;\n  showVerticalLines: boolean = false;\n\n  constructor(private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.otherDataForm = this.formBuilder.group({\n      width: ['', Validators.required],\n      height: ['', Validators.required],\n      horizontalLines: [''],\n      verticalLines: ['']\n    });\n  }\n\n  onSubmit() {\n    if (this.otherDataForm.valid) {\n      const width = this.otherDataForm.value.width;\n      const height = this.otherDataForm.value.height;\n\n      if (width > 0 && height > 0) {\n        this.showHorizontalLines = true;\n        this.showVerticalLines = true;\n      }\n    }\n  }\n\n  get width() {\n    return this.otherDataForm.get('width');\n  }\n\n  get height() {\n    return this.otherDataForm.get('height');\n  }\n\n  get horizontalLines() {\n    return this.otherDataForm.get('horizontalLines')?.value || 0;\n  }\n\n  get verticalLines() {\n    return this.otherDataForm.get('verticalLines')?.value || 0;\n  }\n}\n","<div style=\"display: flex; justify-content: flex-end; align-items: center; height: 100vh;\">\n  <div class=\"col-md-4\">\n    <form (ngSubmit)=\"onSubmit()\" [formGroup]=\"otherDataForm\" class=\"form-group mb-3\">\n      <label for=\"width\" class=\"mr-2\">Dikdörtgenin genişliği (mm):</label>\n      <input type=\"number\" id=\"width\" name=\"width\" class=\"form-control form-control-sm\" formControlName=\"width\" />\n\n      <label for=\"height\" class=\"mr-2\">Dikdörtgenin yüksekliği (mm):</label>\n      <input type=\"number\" id=\"height\" name=\"height\" class=\"form-control form-control-sm\" formControlName=\"height\" />\n\n      <ng-container *ngIf=\"width?.value > 0 && width?.value !== null && height?.value > 0 && height?.value !== null\">\n        <label for=\"horizontalLines\" class=\"mr-2\">Yatayda kaç adet çizgi olsun:</label>\n        <input type=\"number\" id=\"horizontalLines\" name=\"horizontalLines\" class=\"form-control form-control-sm\"\n          formControlName=\"horizontalLines\" />\n\n        <label for=\"verticalLines\" class=\"mr-2\">Dikeyde kaç adet çizgi olsun:</label>\n        <input type=\"number\" id=\"verticalLines\" name=\"verticalLines\" class=\"form-control form-control-sm\"\n          formControlName=\"verticalLines\" />\n      </ng-container>\n\n      <button type=\"submit\" class=\"btn btn-primary\">Gönder</button>\n    </form>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}