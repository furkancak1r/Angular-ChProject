{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nfunction HomeComponent_ng_container_6_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"label\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const hIndex_r4 = ctx.index;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    let tmp_1_0;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\" Yataydaki \", hIndex_r4 + 1, \". \\u00E7izginin \", hIndex_r4 === 0 ? \"dikd\\u00F6rtgenin sol \\u00E7izgisi ile\" : hIndex_r4 + 1 + \". \\u00E7izgi ile\", \" aras\\u0131ndaki mesafe ka\\u00E7 mm olmal\\u0131: \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControl\", (tmp_1_0 = ctx_r2.otherDataForm.get(\"horizontalDistances\")) == null ? null : tmp_1_0.get(hIndex_r4.toString()));\n  }\n}\nfunction HomeComponent_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, HomeComponent_ng_container_6_div_1_Template, 4, 3, \"div\", 9);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.getLinesArray((tmp_0_0 = ctx_r0.otherDataForm.get(\"horizontalLineCount\")) == null ? null : tmp_0_0.value));\n  }\n}\nfunction HomeComponent_ng_container_10_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"label\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const vIndex_r7 = ctx.index;\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    let tmp_1_0;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\" Dikeydeki \", vIndex_r7 + 1, \". \\u00E7izginin \", vIndex_r7 === 0 ? \"dikd\\u00F6rtgenin \\u00FCst \\u00E7izgisi ile\" : vIndex_r7 + 1 + \". \\u00E7izgi ile\", \" aras\\u0131ndaki mesafe ka\\u00E7 mm olmal\\u0131: \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControl\", (tmp_1_0 = ctx_r5.otherDataForm.get(\"verticalDistances\")) == null ? null : tmp_1_0.get(vIndex_r7.toString()));\n  }\n}\nfunction HomeComponent_ng_container_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, HomeComponent_ng_container_10_div_1_Template, 4, 3, \"div\", 9);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.getLinesArray((tmp_0_0 = ctx_r1.otherDataForm.get(\"verticalLineCount\")) == null ? null : tmp_0_0.value));\n  }\n}\nexport class HomeComponent {\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n    this.horizontalDistancesControls = [];\n    this.verticalDistancesControls = [];\n  }\n  ngOnInit() {\n    this.otherDataForm = this.formBuilder.group({\n      horizontalLineCount: [0, Validators.min(0)],\n      horizontalDistances: this.formBuilder.array([]),\n      verticalLineCount: [0, Validators.min(0)],\n      verticalDistances: this.formBuilder.array([])\n    });\n  }\n  onSubmit() {\n    // İşlemleriniz burada gerçekleştirilir\n  }\n  getLinesArray(lineCount) {\n    return Array(lineCount).fill(0).map((_, index) => index);\n  }\n}\nHomeComponent.ɵfac = function HomeComponent_Factory(t) {\n  return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\nHomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HomeComponent,\n  selectors: [[\"app-home\"]],\n  decls: 13,\n  vars: 3,\n  consts: [[2, \"display\", \"flex\", \"justify-content\", \"flex-end\", \"align-items\", \"center\", \"height\", \"100vh\"], [1, \"col-md-4\"], [1, \"form-group\", \"mb-3\", 3, \"formGroup\", \"ngSubmit\"], [\"for\", \"horizontalLineCount\", 1, \"mr-2\"], [\"type\", \"number\", \"id\", \"horizontalLineCount\", \"name\", \"horizontalLineCount\", \"formControlName\", \"horizontalLineCount\", 1, \"form-control\", \"form-control-sm\"], [4, \"ngIf\"], [\"for\", \"verticalLineCount\", 1, \"mr-2\"], [\"type\", \"number\", \"id\", \"verticalLineCount\", \"name\", \"verticalLineCount\", \"formControlName\", \"verticalLineCount\", 1, \"form-control\", \"form-control-sm\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"mt-3\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"number\", 1, \"form-control\", \"form-control-sm\", 3, \"formControl\"]],\n  template: function HomeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function HomeComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(3, \"label\", 3);\n      i0.ɵɵtext(4, \"Yatayda ka\\u00E7 adet \\u00E7izgi olsun:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"input\", 4);\n      i0.ɵɵtemplate(6, HomeComponent_ng_container_6_Template, 2, 1, \"ng-container\", 5);\n      i0.ɵɵelementStart(7, \"label\", 6);\n      i0.ɵɵtext(8, \"Dikeyde ka\\u00E7 adet \\u00E7izgi olsun:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 7);\n      i0.ɵɵtemplate(10, HomeComponent_ng_container_10_Template, 2, 1, \"ng-container\", 5);\n      i0.ɵɵelementStart(11, \"button\", 8);\n      i0.ɵɵtext(12, \"G\\u00F6nder\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      let tmp_1_0;\n      let tmp_2_0;\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.otherDataForm);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.otherDataForm.get(\"horizontalLineCount\")) == null ? null : tmp_1_0.value) > 0);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.otherDataForm.get(\"verticalLineCount\")) == null ? null : tmp_2_0.value) > 0);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormControlDirective, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAAyDA,UAAU,QAAQ,gBAAgB;;;;;;ICMnFC,2BAAuH;IAEnHA,YAGF;IAAAA,iBAAQ;IACRA,4BAA6I;IAC/IA,iBAAM;;;;;;IALFA,eAGF;IAHEA,6NAGF;IACqBA,eAAgF;IAAhFA,4IAAgF;;;;;IAPzGA,6BAA0E;IACxEA,6EAOM;IACRA,0BAAe;;;;;IARmBA,eAAmE;IAAnEA,0IAAmE;;;;;IAcnGA,2BAAmH;IAE/GA,YAGF;IAAAA,iBAAQ;IACRA,4BAA2I;IAC7IA,iBAAM;;;;;;IALFA,eAGF;IAHEA,kOAGF;IACqBA,eAA8E;IAA9EA,0IAA8E;;;;;IAPvGA,6BAAwE;IACtEA,8EAOM;IACRA,0BAAe;;;;;IARiBA,eAAiE;IAAjEA,wIAAiE;;;ADbvG,OAAM,MAAOC,aAAa;EAKxBC,YAAoBC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;IAH/B,gCAA2B,GAAkB,EAAE;IAC/C,8BAAyB,GAAkB,EAAE;EAEE;EAE/CC,QAAQ;IACN,IAAI,CAACC,aAAa,GAAG,IAAI,CAACF,WAAW,CAACG,KAAK,CAAC;MAC1CC,mBAAmB,EAAE,CAAC,CAAC,EAAER,UAAU,CAACS,GAAG,CAAC,CAAC,CAAC,CAAC;MAC3CC,mBAAmB,EAAE,IAAI,CAACN,WAAW,CAACO,KAAK,CAAC,EAAE,CAAC;MAC/CC,iBAAiB,EAAE,CAAC,CAAC,EAAEZ,UAAU,CAACS,GAAG,CAAC,CAAC,CAAC,CAAC;MACzCI,iBAAiB,EAAE,IAAI,CAACT,WAAW,CAACO,KAAK,CAAC,EAAE;KAC7C,CAAC;EACJ;EAEAG,QAAQ;IACN;EAAA;EAGFC,aAAa,CAACC,SAAiB;IAC7B,OAAOC,KAAK,CAACD,SAAS,CAAC,CAACE,IAAI,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,KAAKA,KAAK,CAAC;EAC1D;;AAtBWnB,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAoB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCR1BzB,8BAA2F;MAEjFA;QAAA,OAAY0B,cAAU;MAAA,EAAC;MAC3B1B,gCAA8C;MAAAA,uDAA6B;MAAAA,iBAAQ;MACnFA,2BAAsJ;MAEtJA,gFASe;MAEfA,gCAA4C;MAAAA,uDAA6B;MAAAA,iBAAQ;MACjFA,2BAAgJ;MAEhJA,kFASe;MAEfA,kCAAmD;MAAAA,4BAAM;MAAAA,iBAAS;;;;;MA7BtCA,eAA2B;MAA3BA,6CAA2B;MAIxCA,eAAyD;MAAzDA,oHAAyD;MAczDA,eAAuD;MAAvDA,kHAAuD","names":["Validators","i0","HomeComponent","constructor","formBuilder","ngOnInit","otherDataForm","group","horizontalLineCount","min","horizontalDistances","array","verticalLineCount","verticalDistances","onSubmit","getLinesArray","lineCount","Array","fill","map","_","index","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Program Files (x86)\\Kodlar\\Furkan_ChProject\\ChProject_Client\\ChProject-Angular-RectangleDrawer\\src\\app\\home\\home.component.ts","C:\\Program Files (x86)\\Kodlar\\Furkan_ChProject\\ChProject_Client\\ChProject-Angular-RectangleDrawer\\src\\app\\home\\home.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n  otherDataForm!: FormGroup;\n  horizontalDistancesControls: FormControl[] = [];\n  verticalDistancesControls: FormControl[] = [];\n\n  constructor(private formBuilder: FormBuilder) {}\n\n  ngOnInit() {\n    this.otherDataForm = this.formBuilder.group({\n      horizontalLineCount: [0, Validators.min(0)],\n      horizontalDistances: this.formBuilder.array([]),\n      verticalLineCount: [0, Validators.min(0)],\n      verticalDistances: this.formBuilder.array([]),\n    });\n  }\n\n  onSubmit() {\n    // İşlemleriniz burada gerçekleştirilir\n  }\n\n  getLinesArray(lineCount: number): number[] {\n    return Array(lineCount).fill(0).map((_, index) => index);\n  }\n}\n","<div style=\"display: flex; justify-content: flex-end; align-items: center; height: 100vh;\">\n  <div class=\"col-md-4\">\n    <form (ngSubmit)=\"onSubmit()\" [formGroup]=\"otherDataForm\" class=\"form-group mb-3\">\n      <label for=\"horizontalLineCount\" class=\"mr-2\">Yatayda kaç adet çizgi olsun:</label>\n      <input type=\"number\" id=\"horizontalLineCount\" name=\"horizontalLineCount\" class=\"form-control form-control-sm\" formControlName=\"horizontalLineCount\" />\n\n      <ng-container *ngIf=\"otherDataForm.get('horizontalLineCount')?.value > 0\">\n        <div *ngFor=\"let horizontalLine of getLinesArray(otherDataForm.get('horizontalLineCount')?.value); let hIndex = index\">\n          <label>\n            Yataydaki {{ hIndex + 1 }}. çizginin\n            {{ hIndex === 0 ? 'dikdörtgenin sol çizgisi ile' : (hIndex + 1) + '. çizgi ile' }}\n            arasındaki mesafe kaç mm olmalı:\n          </label>\n          <input type=\"number\" [formControl]=\"otherDataForm.get('horizontalDistances')?.get(hIndex.toString())\" class=\"form-control form-control-sm\" />\n        </div>\n      </ng-container>\n\n      <label for=\"verticalLineCount\" class=\"mr-2\">Dikeyde kaç adet çizgi olsun:</label>\n      <input type=\"number\" id=\"verticalLineCount\" name=\"verticalLineCount\" class=\"form-control form-control-sm\" formControlName=\"verticalLineCount\" />\n\n      <ng-container *ngIf=\"otherDataForm.get('verticalLineCount')?.value > 0\">\n        <div *ngFor=\"let verticalLine of getLinesArray(otherDataForm.get('verticalLineCount')?.value); let vIndex = index\">\n          <label>\n            Dikeydeki {{ vIndex + 1 }}. çizginin\n            {{ vIndex === 0 ? 'dikdörtgenin üst çizgisi ile' : (vIndex + 1) + '. çizgi ile' }}\n            arasındaki mesafe kaç mm olmalı:\n          </label>\n          <input type=\"number\" [formControl]=\"otherDataForm.get('verticalDistances')?.get(vIndex.toString())\" class=\"form-control form-control-sm\" />\n        </div>\n      </ng-container>\n\n      <button type=\"submit\" class=\"btn btn-primary mt-3\">Gönder</button>\n    </form>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}