import { InjectionToken } from '@angular/core';
export const FABRIC_CONFIG = new InjectionToken('FABRIC_CONFIG');
export const FabricEvents = [
    'drop',
    'dragover',
    'dragenter',
    'dragleave',
    'mouseup',
    'mousedown',
    'mouseover',
    'mouseout',
    'mousemove',
    'mousewheel',
    'mousedblclick',
    'mouseupBefore',
    'mousedownBefore',
    'mousemoveBefore',
    'mouseUp',
    'mouseDown',
    'mouseOver',
    'mouseOut',
    'mouseMove',
    'mouseWheel',
    'mouseDblclick',
    'mouseUpBefore',
    'mouseDownBefore',
    'mouseMoveBefore',
    'pathCreated',
    'alterRender',
    'objectAdded',
    'objectMoved',
    'objectScaled',
    'objectSkewed',
    'objectRotated',
    'objectRemoved',
    'objectModified',
    'objectSelected',
    'objectMoving',
    'objectScaling',
    'objectSkewing',
    'objectRotating',
    'selectionCleared',
    'selectionCreated',
    'selectionUpdated',
    'beforeTransform',
    'beforeSelectionCleared'
];
export class FabricConfig {
    constructor(config = {}) {
        this.assign(config);
    }
    assign(config = {}) {
        for (const key in config) {
            this[key] = config[key];
        }
    }
}
//# sourceMappingURL=data:application/json;base64,